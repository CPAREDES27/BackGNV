using Application.Dto;
using Application.Dto.BusinessAdvisors;
using Application.Dto.Download;
using Application.Dto.MaintenanceUser;
using Application.Dto.RandomQuestions;
using Application.Dto.Survey;
using AutoMapper;
using Domain.MainModule.Entities;

namespace Application.Core.Mapping
{
    public class AutoMapperProfile : Profile
    {
        public AutoMapperProfile()
        {
            CreateMap<UsuarioDTO, UsuarioEntity>()
                .ForMember(t => t.IdUsuario, opt => opt.MapFrom(o => o.IdUsuario))
                .ForMember(t => t.UsuarioEmail, opt => opt.MapFrom(o => o.UsuarioEmail))
                .ForMember(t => t.NomCliente, opt => opt.MapFrom(o => o.NomCliente))
                .ForMember(t => t.ApeCliente, opt => opt.MapFrom(o => o.ApeCliente))
                .ForMember(t => t.RazonSocial, opt => opt.MapFrom(o => o.RazonSocial))
                .ForMember(t => t.Ruc, opt => opt.MapFrom(o => o.Ruc))
                .ForMember(t => t.RolId, opt => opt.MapFrom(o => o.RolId))
                .ForMember(t => t.FecRegistro, opt => opt.MapFrom(o => o.FecRegistro))
                .ReverseMap()
                ;
             
            CreateMap<PendingPrevaluationDTO, PreEvaluationEntity>()
                .ForMember(t => t.IdPreevaluacion, opt => opt.MapFrom(o => o.IdPreevaluacion))
                .ForMember(t => t.Apellido, opt => opt.MapFrom(o => o.Apellido))
                .ForMember(t => t.Nombre, opt => opt.MapFrom(o => o.Nombre))
                .ForMember(t => t.NumDocumento, opt => opt.MapFrom(o => o.NumDocumento))
                .ForMember(t => t.NumPlaca, opt => opt.MapFrom(o => o.NumPlaca))
                .ForMember(t => t.Email, opt => opt.MapFrom(o => o.Email))
                .ForMember(t => t.Celular, opt => opt.MapFrom(o => o.Celular))
                .ForMember(t => t.NombreAsesorReferido, opt => opt.MapFrom(o => o.NombreAsesorReferido))
                .ReverseMap()
                ;

            CreateMap<CustomerDTO, UsuarioEntity>()
                .ForMember(t => t.IdUsuario, opt => opt.MapFrom(o => o.IdUsuario))
                .ForMember(t => t.NomCliente, opt => opt.MapFrom(o => o.NomCliente))
                .ForMember(t => t.ApeCliente, opt => opt.MapFrom(o => o.ApeCliente))
                .ForMember(t => t.Ruc, opt => opt.MapFrom(o => o.Ruc))
                .ForMember(t => t.RazonSocial, opt => opt.MapFrom(o => o.RazonSocial))
                .ForMember(t => t.UsuarioEmail, opt => opt.MapFrom(o => o.UsuarioEmail))
                .ForMember(t => t.TelefonoFijo, opt => opt.MapFrom(o => o.TelefonoFijo))
                .ForMember(t => t.TelefonoMovil, opt => opt.MapFrom(o => o.TelefonoMovil))
                .ForMember(t => t.IdTipoDocumento, opt => opt.MapFrom(o => o.IdTipoDocumento))
                .ForMember(t => t.NumeroDocumento, opt => opt.MapFrom(o => o.NumeroDocumento)) 
                .ForMember(t => t.Contrasena, opt => opt.MapFrom(o => o.Contrasena))
                .ForMember(t => t.RolId, opt => opt.MapFrom(o => o.RolId))
                .ForMember(t => t.TermPoliticasPrivacidad, opt => opt.MapFrom(o => o.TermPoliticasPrivacidad))
                .ForMember(t => t.TermFinesComerciales, opt => opt.MapFrom(o => o.TermFinesComerciales))
                .ReverseMap()
                ;
             
            CreateMap<CustomerUserDTO, UsuarioEntity>() 
                .ForMember(t => t.NomCliente, opt => opt.MapFrom(o => o.NomCliente))
                .ForMember(t => t.ApeCliente, opt => opt.MapFrom(o => o.ApeCliente))
                .ForMember(t => t.Ruc, opt => opt.MapFrom(o => o.Ruc))
                .ForMember(t => t.RazonSocial, opt => opt.MapFrom(o => o.RazonSocial))
                .ForMember(t => t.UsuarioEmail, opt => opt.MapFrom(o => o.UsuarioEmail))
                .ForMember(t => t.TelefonoFijo, opt => opt.MapFrom(o => o.TelefonoFijo))
                .ForMember(t => t.TelefonoMovil, opt => opt.MapFrom(o => o.TelefonoMovil))
                .ForMember(t => t.IdTipoDocumento, opt => opt.MapFrom(o => o.IdTipoDocumento))
                .ForMember(t => t.NumeroDocumento, opt => opt.MapFrom(o => o.NumeroDocumento))
                .ForMember(t => t.Contrasena, opt => opt.MapFrom(o => o.Contrasena))
                .ForMember(t => t.RolId, opt => opt.MapFrom(o => o.RolId))
                .ForMember(t => t.TermPoliticasPrivacidad, opt => opt.MapFrom(o => o.TermPoliticasPrivacidad))
                .ForMember(t => t.TermFinesComerciales, opt => opt.MapFrom(o => o.TermFinesComerciales))
                .ReverseMap()
                ;

            CreateMap<RegisterPreEvaluationDTO, PreEvaluationEntity>()
               .ForMember(t => t.IdPreevaluacion, opt => opt.MapFrom(o => o.IdPreevaluacion))
               .ForMember(t => t.Nombre, opt => opt.MapFrom(o => o.Nombre))
               .ForMember(t => t.Apellido, opt => opt.MapFrom(o => o.Apellido))
               .ForMember(t => t.IdTipoDocumento, opt => opt.MapFrom(o => o.IdTipoDocumento))
               .ForMember(t => t.NumDocumento, opt => opt.MapFrom(o => o.NumDocumento))
               .ForMember(t => t.NumPlaca, opt => opt.MapFrom(o => o.NumPlaca))
               .ForMember(t => t.Email, opt => opt.MapFrom(o => o.Email))
               .ForMember(t => t.Celular, opt => opt.MapFrom(o => o.Celular))
               .ForMember(t => t.TermCondiciones, opt => opt.MapFrom(o => o.TermCondiciones))
               .ForMember(t => t.FinComerciales, opt => opt.MapFrom(o => o.FinComerciales))
               .ForMember(t => t.IdEstado, opt => opt.MapFrom(o => o.IdEstado))
               .ForMember(t => t.FechaRegistro, opt => opt.MapFrom(o => o.FechaRegistro))
               .ForMember(t => t.NombreAsesorReferido, opt => opt.MapFrom(o => o.NombreAsesorReferido))
               .ForMember(t => t.IdProducto, opt => opt.MapFrom(o => o.IdProducto))
               .ForMember(t => t.FlagUser, opt => opt.MapFrom(o => o.FlagUser))
               .ForMember(t => t.IdAsesor, opt => opt.MapFrom(o => o.IdAsesor))
               .ReverseMap()
               ;

            CreateMap<PreEvaluationDTO, PreEvaluationEntity>()
               .ForMember(t => t.IdPreevaluacion, opt => opt.MapFrom(o => o.IdPreevaluacion))
               .ForMember(t => t.Nombre, opt => opt.MapFrom(o => o.Nombre))
               .ForMember(t => t.Apellido, opt => opt.MapFrom(o => o.Apellido))
               .ForMember(t => t.IdTipoDocumento, opt => opt.MapFrom(o => o.IdTipoDocumento))
               .ForMember(t => t.NumDocumento, opt => opt.MapFrom(o => o.NumDocumento))
               .ForMember(t => t.NumPlaca, opt => opt.MapFrom(o => o.NumPlaca))
               .ForMember(t => t.Email, opt => opt.MapFrom(o => o.Email))
               .ForMember(t => t.Celular, opt => opt.MapFrom(o => o.Celular))
               .ForMember(t => t.TermCondiciones, opt => opt.MapFrom(o => o.TermCondiciones))
               .ForMember(t => t.FinComerciales, opt => opt.MapFrom(o => o.FinComerciales))
               .ForMember(t => t.IdEstado, opt => opt.MapFrom(o => o.IdEstado))
               .ForMember(t => t.FechaRegistro, opt => opt.MapFrom(o => o.FechaRegistro))
               .ForMember(t => t.NombreAsesorReferido, opt => opt.MapFrom(o => o.NombreAsesorReferido))
               .ForMember(t => t.IdProducto, opt => opt.MapFrom(o => o.IdProducto))
               .ForMember(t => t.FlagUser, opt => opt.MapFrom(o => o.FlagUser))
               .ForMember(t => t.IdAsesor, opt => opt.MapFrom(o => o.IdAsesor))
               .ReverseMap()
               ;

            CreateMap<PreEvaluationDTO, PreEvaluationTempEntity>()
               .ForMember(t => t.IdPreevaluacion, opt => opt.MapFrom(o => o.IdPreevaluacion))
               .ForMember(t => t.Nombre, opt => opt.MapFrom(o => o.Nombre))
               .ForMember(t => t.Apellido, opt => opt.MapFrom(o => o.Apellido))
               .ForMember(t => t.IdTipoDocumento, opt => opt.MapFrom(o => o.IdTipoDocumento))
               .ForMember(t => t.NumDocumento, opt => opt.MapFrom(o => o.NumDocumento))
               .ForMember(t => t.NumPlaca, opt => opt.MapFrom(o => o.NumPlaca))
               .ForMember(t => t.Email, opt => opt.MapFrom(o => o.Email))
               .ForMember(t => t.Celular, opt => opt.MapFrom(o => o.Celular))
               .ForMember(t => t.TermCondiciones, opt => opt.MapFrom(o => o.TermCondiciones))
               .ForMember(t => t.FinComerciales, opt => opt.MapFrom(o => o.FinComerciales))
               .ForMember(t => t.IdEstado, opt => opt.MapFrom(o => o.IdEstado))
               .ForMember(t => t.FechaRegistro, opt => opt.MapFrom(o => o.FechaRegistro))
               .ForMember(t => t.NombreAsesorReferido, opt => opt.MapFrom(o => o.NombreAsesorReferido))
               .ForMember(t => t.IdProducto, opt => opt.MapFrom(o => o.IdProducto))
               .ForMember(t => t.FlagUser, opt => opt.MapFrom(o => o.FlagUser))
               .ForMember(t => t.IdAsesor, opt => opt.MapFrom(o => o.IdAsesor))
               .ForMember(t => t.Producto, opt => opt.MapFrom(o => o.Producto))
               .ForMember(t => t.Precio, opt => opt.MapFrom(o => o.Precio))
               .ForMember(t => t.Proveedor, opt => opt.MapFrom(o => o.Proveedor))
               .ReverseMap()
               ;

            //<--Registro de Reglas de Knockout-->
            CreateMap<ReglaKnockoutDTO, RegistroReglasKnockoutEntity>()
             .ForMember(t => t.IdPreevaluacion, opt => opt.MapFrom(o => o.IdPreevaluacion))
             .ForMember(t => t.IndicadorCreditoActivo, opt => opt.MapFrom(o => o.IndicadorCreditoActivo))
             .ForMember(t => t.IndicadorParaConsumir, opt => opt.MapFrom(o => o.IndicadorParaConsumir))
             .ForMember(t => t.IndicadorAntiguedadMenos10Anios, opt => opt.MapFrom(o => o.IndicadorAntiguedadMenos10Anios)) 
             .ForMember(t => t.IndicadorTitular20A65Anios, opt => opt.MapFrom(o => o.IndicadorTitular20A65Anios)) 
             .ForMember(t => t.IndicadorDniRegistradoEnReniec, opt => opt.MapFrom(o => o.IndicadorDniRegistradoEnReniec)) 
             .ForMember(t => t.IndicadorDniTitularContrato, opt => opt.MapFrom(o => o.IndicadorDniTitularContrato)) 
             .ForMember(t => t.IndicadorLicenciaConducirVigente, opt => opt.MapFrom(o => o.IndicadorLicenciaConducirVigente)) 
             .ForMember(t => t.IndicadorTitularPropietarioVehiculo, opt => opt.MapFrom(o => o.IndicadorTitularPropietarioVehiculo)) 
             .ForMember(t => t.IndicadorSoatVigente, opt => opt.MapFrom(o => o.IndicadorSoatVigente)) 
             .ForMember(t => t.IndicadorVehiculoNoMultasPendientePago, opt => opt.MapFrom(o => o.IndicadorVehiculoNoMultasPendientePago)) 
             .ForMember(t => t.IndicadorTitularNoMultasPendientePago, opt => opt.MapFrom(o => o.IndicadorTitularNoMultasPendientePago)) 
             .ForMember(t => t.IndicadorVehiculoNoOrdenCaptura, opt => opt.MapFrom(o => o.IndicadorVehiculoNoOrdenCaptura)) 
             .ForMember(t => t.IndicadorEstadoPreevaluacion, opt => opt.MapFrom(o => o.IndicadorEstadoPreevaluacion))
             .ForMember(t => t.FechaRegistro, opt => opt.MapFrom(o => o.FechaRegistro))
             .ForMember(t => t.IdEstadoPrevaluacion, opt => opt.MapFrom(o => o.IdEstadoPrevaluacion))
             .ReverseMap()
             ;

            CreateMap<RegisterReglaKnockoutDTO, RegistroReglasKnockoutEntity>()
             .ForMember(t => t.IdReglanockout, opt => opt.MapFrom(o => o.IdReglanockout))
             .ForMember(t => t.IdPreevaluacion, opt => opt.MapFrom(o => o.IdPreevaluacion))
             .ForMember(t => t.IndicadorCreditoActivo, opt => opt.MapFrom(o => o.IndicadorCreditoActivo))
             .ForMember(t => t.IndicadorParaConsumir, opt => opt.MapFrom(o => o.IndicadorParaConsumir))
             .ForMember(t => t.IndicadorAntiguedadMenos10Anios, opt => opt.MapFrom(o => o.IndicadorAntiguedadMenos10Anios))
             .ForMember(t => t.IndicadorTitular20A65Anios, opt => opt.MapFrom(o => o.IndicadorTitular20A65Anios))
             .ForMember(t => t.IndicadorDniRegistradoEnReniec, opt => opt.MapFrom(o => o.IndicadorDniRegistradoEnReniec))
             .ForMember(t => t.IndicadorDniTitularContrato, opt => opt.MapFrom(o => o.IndicadorDniTitularContrato))
             .ForMember(t => t.IndicadorLicenciaConducirVigente, opt => opt.MapFrom(o => o.IndicadorLicenciaConducirVigente))
             .ForMember(t => t.IndicadorTitularPropietarioVehiculo, opt => opt.MapFrom(o => o.IndicadorTitularPropietarioVehiculo))
             .ForMember(t => t.IndicadorSoatVigente, opt => opt.MapFrom(o => o.IndicadorSoatVigente))
             .ForMember(t => t.IndicadorVehiculoNoMultasPendientePago, opt => opt.MapFrom(o => o.IndicadorVehiculoNoMultasPendientePago))
             .ForMember(t => t.IndicadorTitularNoMultasPendientePago, opt => opt.MapFrom(o => o.IndicadorTitularNoMultasPendientePago))
             .ForMember(t => t.IndicadorVehiculoNoOrdenCaptura, opt => opt.MapFrom(o => o.IndicadorVehiculoNoOrdenCaptura))
             .ForMember(t => t.IndicadorEstadoPreevaluacion, opt => opt.MapFrom(o => o.IndicadorEstadoPreevaluacion))
             .ForMember(t => t.FechaRegistro, opt => opt.MapFrom(o => o.FechaRegistro))
             .ForMember(t => t.IdEstadoPrevaluacion, opt => opt.MapFrom(o => o.IdEstadoPrevaluacion))
             .ReverseMap()
             ;

            //<--Solicitud de Financiamiento-->
            CreateMap<FinancingRequestDTO, RegistroSolicitudFinanciamientoEntity>()
             .ForMember(t => t.IdCliente, opt => opt.MapFrom(o => o.IdCliente))
             .ForMember(t => t.Nombres, opt => opt.MapFrom(o => o.Nombres))
             .ForMember(t => t.Apellidos, opt => opt.MapFrom(o => o.Apellidos))
             .ForMember(t => t.NumeroDocumento, opt => opt.MapFrom(o => o.NumeroDocumento))
             //.ForMember(t => t.CodUbigeo, opt => opt.MapFrom(o => o.CodUbigeo))
             //.ForMember(t => t.FechaEmision, opt => opt.MapFrom(o => o.FechaEmision))
             .ForMember(t => t.FechaNacimiento, opt => opt.MapFrom(o => o.FechaNacimiento))
             .ForMember(t => t.EstadoCivil, opt => opt.MapFrom(o => o.EstadoCivil))
             .ForMember(t => t.CorreoElectronico, opt => opt.MapFrom(o => o.CorreoElectronico))
             .ForMember(t => t.Celular, opt => opt.MapFrom(o => o.Celular))
             .ForMember(t => t.IdNivelEstudios, opt => opt.MapFrom(o => o.IdNivelEstudios))
             .ForMember(t => t.Ocupacion, opt => opt.MapFrom(o => o.Ocupacion))
             .ForMember(t => t.TipoContrato, opt => opt.MapFrom(o => o.TipoContrato))
             .ForMember(t => t.TiempoEmpleoCliente, opt => opt.MapFrom(o => o.TiempoEmpleoCliente))
             .ForMember(t => t.TipoCalle, opt => opt.MapFrom(o => o.TipoCalle))
             .ForMember(t => t.Direccion, opt => opt.MapFrom(o => o.Direccion))
             .ForMember(t => t.NumeroInterior, opt => opt.MapFrom(o => o.NumeroInterior))
             .ForMember(t => t.MzLt, opt => opt.MapFrom(o => o.MzLt))
             .ForMember(t => t.Distrito, opt => opt.MapFrom(o => o.Distrito))
             .ForMember(t => t.ReferenciaDomicilio, opt => opt.MapFrom(o => o.ReferenciaDomicilio))
             .ForMember(t => t.TipoVivienda, opt => opt.MapFrom(o => o.TipoVivienda))
             .ForMember(t => t.TiempoAnoVivienda, opt => opt.MapFrom(o => o.TiempoAnoVivienda))
             .ForMember(t => t.TiempoMesesVivienda, opt => opt.MapFrom(o => o.TiempoMesesVivienda))
             .ForMember(t => t.IsGasNatural, opt => opt.MapFrom(o => o.IsGasNatural))
             .ForMember(t => t.NumeroPlaca, opt => opt.MapFrom(o => o.NumeroPlaca))
             .ForMember(t => t.MarcaAuto, opt => opt.MapFrom(o => o.MarcaAuto))
             .ForMember(t => t.ModeloAuto, opt => opt.MapFrom(o => o.ModeloAuto))
             .ForMember(t => t.FechaFabricacion, opt => opt.MapFrom(o => o.FechaFabricacion))
             .ForMember(t => t.NumeroTarjetaPropiedad, opt => opt.MapFrom(o => o.NumeroTarjetaPropiedad))
             //.ForMember(t => t.TipoCilindroMotor, opt => opt.MapFrom(o => o.TipoCilindroMotor))
             .ForMember(t => t.TipoUsoVehicular, opt => opt.MapFrom(o => o.TipoUsoVehicular))
             .ForMember(t => t.EstadoVehiculo, opt => opt.MapFrom(o => o.EstadoVehiculo))
             .ForMember(t => t.IngresoMensual, opt => opt.MapFrom(o => o.IngresoMensual))
             .ForMember(t => t.NumeroHijos, opt => opt.MapFrom(o => o.NumeroHijos))
             .ForMember(t => t.NombreEstablecimiento, opt => opt.MapFrom(o => o.NombreEstablecimiento))
             .ForMember(t => t.TipoFinanciamiento, opt => opt.MapFrom(o => o.TipoFinanciamiento))
             .ForMember(t => t.TipoCredito, opt => opt.MapFrom(o => o.TipoCredito))
             .ForMember(t => t.PlazoCuotasFinanciamiento, opt => opt.MapFrom(o => o.PlazoCuotasFinanciamiento))
             .ForMember(t => t.MontoFinanciamiento, opt => opt.MapFrom(o => o.MontoFinanciamiento))
             .ForMember(t => t.Observaciones, opt => opt.MapFrom(o => o.Observaciones))
             .ForMember(t => t.IdTaller, opt => opt.MapFrom(o => o.IdTaller))
             .ForMember(t => t.ClaseVehiculo, opt => opt.MapFrom(o => o.ClaseVehiculo))
             .ForMember(t => t.NumeroAsientos, opt => opt.MapFrom(o => o.NumeroAsientos))
             .ForMember(t => t.NumeroMotor, opt => opt.MapFrom(o => o.NumeroMotor))
             .ForMember(t => t.NumeroSerie, opt => opt.MapFrom(o => o.NumeroSerie))
             .ForMember(t => t.NumeroScore, opt => opt.MapFrom(o => o.NumeroScore))
             .ForMember(t => t.IdPreevaluacion, opt => opt.MapFrom(o => o.IdPreevaluacion))
             .ForMember(t => t.FlagContratoFinanciamiento, opt => opt.MapFrom(o => o.FlagContratoFinanciamiento))
             .ForMember(t => t.FlagFormatoConformidad, opt => opt.MapFrom(o => o.FlagFormatoConformidad))
             .ForMember(t => t.FlagDNI, opt => opt.MapFrom(o => o.FlagDNI))
             .ForMember(t => t.DigitoVerificadorDNI, opt => opt.MapFrom(o => o.DigitoVerificadorDNI))
             .ReverseMap()
             ;

            CreateMap<CustomerFinancingDTO, RegistroSolicitudFinanciamientoEntity>()
            .ForMember(t => t.IdSfCliente, opt => opt.MapFrom(o => o.IdSfCliente))
            .ForMember(t => t.IdCliente, opt => opt.MapFrom(o => o.IdCliente))
            .ForMember(t => t.Nombres, opt => opt.MapFrom(o => o.Nombres))
            .ForMember(t => t.Apellidos, opt => opt.MapFrom(o => o.Apellidos))
            .ForMember(t => t.NumeroDocumento, opt => opt.MapFrom(o => o.NumeroDocumento))
            //.ForMember(t => t.CodUbigeo, opt => opt.MapFrom(o => o.CodUbigeo))
            //.ForMember(t => t.FechaEmision, opt => opt.MapFrom(o => o.FechaEmision))
            .ForMember(t => t.FechaNacimiento, opt => opt.MapFrom(o => o.FechaNacimiento))
            .ForMember(t => t.EstadoCivil, opt => opt.MapFrom(o => o.EstadoCivil))
            .ForMember(t => t.CorreoElectronico, opt => opt.MapFrom(o => o.CorreoElectronico))
            .ForMember(t => t.Celular, opt => opt.MapFrom(o => o.Celular))
            .ForMember(t => t.IdNivelEstudios, opt => opt.MapFrom(o => o.IdNivelEstudios))
            .ForMember(t => t.Ocupacion, opt => opt.MapFrom(o => o.Ocupacion))
            .ForMember(t => t.TipoContrato, opt => opt.MapFrom(o => o.TipoContrato))
            .ForMember(t => t.TiempoEmpleoCliente, opt => opt.MapFrom(o => o.TiempoEmpleoCliente))
            .ForMember(t => t.TipoCalle, opt => opt.MapFrom(o => o.TipoCalle))
            .ForMember(t => t.Direccion, opt => opt.MapFrom(o => o.Direccion))
            .ForMember(t => t.NumeroInterior, opt => opt.MapFrom(o => o.NumeroInterior))
            .ForMember(t => t.MzLt, opt => opt.MapFrom(o => o.MzLt))
            .ForMember(t => t.Distrito, opt => opt.MapFrom(o => o.Distrito))
            .ForMember(t => t.ReferenciaDomicilio, opt => opt.MapFrom(o => o.ReferenciaDomicilio))
            .ForMember(t => t.TipoVivienda, opt => opt.MapFrom(o => o.TipoVivienda))
            .ForMember(t => t.TiempoAnoVivienda, opt => opt.MapFrom(o => o.TiempoAnoVivienda))
            .ForMember(t => t.TiempoMesesVivienda, opt => opt.MapFrom(o => o.TiempoMesesVivienda))
            .ForMember(t => t.IsGasNatural, opt => opt.MapFrom(o => o.IsGasNatural))
            .ForMember(t => t.NumeroPlaca, opt => opt.MapFrom(o => o.NumeroPlaca))
            .ForMember(t => t.MarcaAuto, opt => opt.MapFrom(o => o.MarcaAuto))
            .ForMember(t => t.ModeloAuto, opt => opt.MapFrom(o => o.ModeloAuto))
            .ForMember(t => t.FechaFabricacion, opt => opt.MapFrom(o => o.FechaFabricacion))
            .ForMember(t => t.NumeroTarjetaPropiedad, opt => opt.MapFrom(o => o.NumeroTarjetaPropiedad))
            //.ForMember(t => t.TipoCilindroMotor, opt => opt.MapFrom(o => o.TipoCilindroMotor))
            .ForMember(t => t.TipoUsoVehicular, opt => opt.MapFrom(o => o.TipoUsoVehicular))
            .ForMember(t => t.EstadoVehiculo, opt => opt.MapFrom(o => o.EstadoVehiculo))
            .ForMember(t => t.IngresoMensual, opt => opt.MapFrom(o => o.IngresoMensual))
            .ForMember(t => t.NumeroHijos, opt => opt.MapFrom(o => o.NumeroHijos))
            .ForMember(t => t.NombreEstablecimiento, opt => opt.MapFrom(o => o.NombreEstablecimiento))
            .ForMember(t => t.TipoFinanciamiento, opt => opt.MapFrom(o => o.TipoFinanciamiento))
            .ForMember(t => t.TipoCredito, opt => opt.MapFrom(o => o.TipoCredito))
            .ForMember(t => t.PlazoCuotasFinanciamiento, opt => opt.MapFrom(o => o.PlazoCuotasFinanciamiento))
            .ForMember(t => t.MontoFinanciamiento, opt => opt.MapFrom(o => o.MontoFinanciamiento))
            .ForMember(t => t.Observaciones, opt => opt.MapFrom(o => o.Observaciones))
            .ForMember(t => t.IdTaller, opt => opt.MapFrom(o => o.IdTaller))
             .ForMember(t => t.ClaseVehiculo, opt => opt.MapFrom(o => o.ClaseVehiculo))
             .ForMember(t => t.NumeroAsientos, opt => opt.MapFrom(o => o.NumeroAsientos))
             .ForMember(t => t.NumeroMotor, opt => opt.MapFrom(o => o.NumeroMotor))
             .ForMember(t => t.NumeroSerie, opt => opt.MapFrom(o => o.NumeroSerie))
             .ForMember(t => t.NumeroScore, opt => opt.MapFrom(o => o.NumeroScore))
             .ForMember(t => t.IdPreevaluacion, opt => opt.MapFrom(o => o.IdPreevaluacion))
             .ForMember(t => t.FlagContratoFinanciamiento, opt => opt.MapFrom(o => o.FlagContratoFinanciamiento))
             .ForMember(t => t.FlagFormatoConformidad, opt => opt.MapFrom(o => o.FlagFormatoConformidad))
             .ForMember(t => t.FlagDNI, opt => opt.MapFrom(o => o.FlagDNI))
             .ForMember(t => t.DigitoVerificadorDNI, opt => opt.MapFrom(o => o.DigitoVerificadorDNI))
            .ReverseMap()
            ;


          CreateMap<WorkshopDTO, TallerEntity>()
          .ForMember(t => t.IdTaller, opt => opt.MapFrom(o => o.IdTaller))
          .ForMember(t => t.Nombre, opt => opt.MapFrom(o => o.Nombre))
          .ForMember(t => t.Direccion, opt => opt.MapFrom(o => o.Direccion)) 
          .ReverseMap()
          ;


            CreateMap<RandomQuestionsDTO, MantPreguntasAletoriaEntity>()
               .ForMember(t => t.Id, opt => opt.MapFrom(o => o.Id))
               .ForMember(t => t.Pregunta, opt => opt.MapFrom(o => o.Pregunta))
               .ForMember(t => t.Respuesta, opt => opt.MapFrom(o => o.Respuesta))
               .ForMember(t => t.TipoDato, opt => opt.MapFrom(o => o.TipoDato)) 
               .ReverseMap()
               ;

            CreateMap<RandomQuestionsRequestDTO, MantPreguntasAleatoriasEntity>()
                .ForMember(t => t.IdPregunta, opt => opt.MapFrom(o => o.IdPregunta))
                .ForMember(t => t.Pregunta, opt => opt.MapFrom(o => o.Pregunta))
                .ForMember(t => t.TextAyuda, opt => opt.MapFrom(o => o.TextAyuda))
                .ForMember(t => t.TipoDato, opt => opt.MapFrom(o => o.TipoDato))
                .ForMember(t => t.Activo, opt => opt.MapFrom(o => o.Activo));

            CreateMap<RandomQuestionsDetailsRequestDTO, MantPreguntasAleatoriasDetalleEntity>()
                .ForMember(t => t.IdDetalle, opt => opt.MapFrom(o => o.IdDetalle))
                .ForMember(t => t.IdPregunta, opt => opt.MapFrom(o => o.IdPregunta))
                .ForMember(t => t.Descripcion, opt => opt.MapFrom(o => o.Descripcion))
                .ForMember(t => t.Activo, opt => opt.MapFrom(o => o.Activo));

            CreateMap<BusinessAdvisorsDTO, UsuarioEntity>()
               .ForMember(t => t.IdUsuario, opt => opt.MapFrom(o => o.IdUsuario))
               .ForMember(t => t.NomCliente, opt => opt.MapFrom(o => o.NomCliente))
               .ForMember(t => t.ApeCliente, opt => opt.MapFrom(o => o.ApeCliente))
               .ForMember(t => t.UsuarioEmail, opt => opt.MapFrom(o => o.Email))
               .ReverseMap()
               ;

            CreateMap<DownloadFileDTO, MaestroEntity>()
              .ForMember(t => t.Valor, opt => opt.MapFrom(o => o.Valor)) 
              .ReverseMap()
              ;

            CreateMap<DepartmentDTO, UbigeoDepartamentoEntity>()
            .ForMember(t => t.IdDepartamento, opt => opt.MapFrom(o => o.IdDepartamento))
            .ForMember(t => t.Departamento, opt => opt.MapFrom(o => o.Departamento))
            .ReverseMap()
            ;

            CreateMap<ProvinceDTO, UbigeoProvinciaEntity>()
           .ForMember(t => t.IdProvinicia, opt => opt.MapFrom(o => o.IdProvinicia))
           .ForMember(t => t.Provincia, opt => opt.MapFrom(o => o.Provincia)) 
           .ReverseMap()
           ;

            CreateMap<DistrictDTO, UbigeoDistritoEntity>()
            .ForMember(t => t.IdDistrito, opt => opt.MapFrom(o => o.IdDistrito))
            .ForMember(t => t.Distrito, opt => opt.MapFrom(o => o.Distrito)) 
            .ReverseMap()
            ;

            CreateMap<UserDTO, UsuarioEntity>()
            .ForMember(t => t.IdUsuario, opt => opt.MapFrom(o => o.IdUsuario)) 
            .ReverseMap()
            ;

            CreateMap<UserRequestDTO, UsuarioEntity>() 
            .ForMember(t => t.UsuarioEmail, opt => opt.MapFrom(o => o.UsuarioEmail))
            .ForMember(t => t.Contrasena, opt => opt.MapFrom(o => o.Contrasena))
            .ForMember(t => t.NomCliente, opt => opt.MapFrom(o => o.NomCliente))
            .ForMember(t => t.ApeCliente, opt => opt.MapFrom(o => o.ApeCliente))
            .ForMember(t => t.Ruc, opt => opt.MapFrom(o => o.Ruc))
            .ForMember(t => t.RazonSocial, opt => opt.MapFrom(o => o.RazonSocial))
            .ForMember(t => t.IdTipoDocumento, opt => opt.MapFrom(o => o.IdTipoDocumento))
            .ForMember(t => t.NumeroDocumento, opt => opt.MapFrom(o => o.NumeroDocumento))
            .ForMember(t => t.RolId, opt => opt.MapFrom(o => o.RolId))
            .ForMember(t => t.FechaNacimiento, opt => opt.MapFrom(o => o.FechaNacimiento))
            .ForMember(t => t.EstadoCivil, opt => opt.MapFrom(o => o.EstadoCivil))
            .ForMember(t => t.TelefonoFijo, opt => opt.MapFrom(o => o.TelefonoFijo))
            .ForMember(t => t.TelefonoMovil, opt => opt.MapFrom(o => o.TelefonoMovil))
            .ForMember(t => t.IdTipoCalle, opt => opt.MapFrom(o => o.IdTipoCalle))
            .ForMember(t => t.DireccionResidencia, opt => opt.MapFrom(o => o.DireccionResidencia))
            .ForMember(t => t.NumeroIntDpto, opt => opt.MapFrom(o => o.NumeroIntDpto))
            .ForMember(t => t.ManzanaLote, opt => opt.MapFrom(o => o.ManzanaLote))
            .ForMember(t => t.Referencia, opt => opt.MapFrom(o => o.Referencia))
            .ForMember(t => t.IdDepartamento, opt => opt.MapFrom(o => o.IdDepartamento))
            .ForMember(t => t.IdProvincia, opt => opt.MapFrom(o => o.IdProvincia))
            .ForMember(t => t.IdDepartamento, opt => opt.MapFrom(o => o.IdDistrito))
            //.ForMember(t => t.UsuarioModifica, opt => opt.MapFrom(o => o.UsuarioModifica))
            .ForMember(t => t.UsuarioRegistra, opt => opt.MapFrom(o => o.UsuarioRegistra))
            .ReverseMap()
            ;



          CreateMap<RandomQuestionsRequestDTO, MantPreguntasAleatoriasEntity>()
          .ForMember(t => t.IdPregunta, opt => opt.MapFrom(o => o.IdPregunta))
          .ForMember(t => t.Pregunta, opt => opt.MapFrom(o => o.Pregunta))
          .ForMember(t => t.TextAyuda, opt => opt.MapFrom(o => o.TextAyuda))
          .ForMember(t => t.TipoDato, opt => opt.MapFrom(o => o.TipoDato))
          //.ForMember(t => t.DetailsQuestions, opt => opt.MapFrom(o => o.DetailsQuestions))
          .ReverseMap()
          ;


            CreateMap<RequestQuestionDTO, MantPreguntasAleatoriasEntity>()
            .ForMember(t => t.IdPregunta, opt => opt.MapFrom(o => o.IdPregunta)) 
            .ReverseMap()
            ;

            CreateMap<SurveyDTO, MantAnswerEntity>()
            .ForMember(t => t.IdQuestion, opt => opt.MapFrom(o => o.IdPregunta))
            .ForMember(t => t.IdFinancing, opt => opt.MapFrom(o => o.IdFinanciamiento))
            .ForMember(t => t.Answer, opt => opt.MapFrom(o => o.Respuesta))
            .ReverseMap()
            ;

            CreateMap<UserPageResponseDTO, UsuarioEntity>()
           .ForMember(t => t.IdUsuario, opt => opt.MapFrom(o => o.IdUsuario))
           .ForMember(t => t.UsuarioEmail, opt => opt.MapFrom(o => o.UsuarioEmail))
           .ForMember(t => t.NomCliente, opt => opt.MapFrom(o => o.NomCliente))
           .ForMember(t => t.ApeCliente, opt => opt.MapFrom(o => o.ApeCliente))
            .ForMember(t => t.RolId, opt => opt.MapFrom(o => o.RolId))
           .ForMember(t => t.IdTipoDocumento, opt => opt.MapFrom(o => o.TipoDocumento))
           .ForMember(t => t.NumeroDocumento, opt => opt.MapFrom(o => o.NumeroDocumento))
           .ForMember(t => t.RazonSocial, opt => opt.MapFrom(o => o.RazonSocial))
           .ForMember(t => t.Ruc, opt => opt.MapFrom(o => o.Ruc))
           .ForMember(t => t.TelefonoMovil, opt => opt.MapFrom(o => o.TelefonoMovil))
           .ReverseMap()
           ;

            CreateMap<UserPageResponseDTO, UsuarioTempEntity>()
           .ForMember(t => t.IdUsuario, opt => opt.MapFrom(o => o.IdUsuario))
           .ForMember(t => t.UsuarioEmail, opt => opt.MapFrom(o => o.UsuarioEmail))
           .ForMember(t => t.NomCliente, opt => opt.MapFrom(o => o.NomCliente))
           .ForMember(t => t.ApeCliente, opt => opt.MapFrom(o => o.ApeCliente))
            .ForMember(t => t.RolId, opt => opt.MapFrom(o => o.RolId))
           .ForMember(t => t.IdTipoDocumento, opt => opt.MapFrom(o => o.TipoDocumento))
           .ForMember(t => t.NumeroDocumento, opt => opt.MapFrom(o => o.NumeroDocumento))
           .ForMember(t => t.RazonSocial, opt => opt.MapFrom(o => o.RazonSocial))
           .ForMember(t => t.Ruc, opt => opt.MapFrom(o => o.Ruc))
           .ForMember(t => t.TelefonoMovil, opt => opt.MapFrom(o => o.TelefonoMovil))
           .ForMember(t => t.DescRol, opt => opt.MapFrom(o => o.DescRol))
           .ReverseMap()
           ;

            CreateMap<ProductRequestDTO, ProductEntity>()
            //.ForMember(t => t.IdProducto, opt => opt.MapFrom(o => o.idp))
            .ForMember(t => t.IdTipoProducto, opt => opt.MapFrom(o => o.IdTipoProducto))
            .ForMember(t => t.IdMarcaProducto, opt => opt.MapFrom(o => o.IdMarca))
            .ForMember(t => t.IdProveedorProducto, opt => opt.MapFrom(o => o.IdProveedor))
            .ForMember(t => t.Descripcion, opt => opt.MapFrom(o => o.Descripcion))
            .ForMember(t => t.Precio, opt => opt.MapFrom(o => o.Precio))
            .ForMember(t => t.Imagen, opt => opt.MapFrom(o => o.Imagen))
            .ForMember(t => t.NumOrden, opt => opt.MapFrom(o => o.NumOrden))
            .ForMember(t => t.IdEstado, opt => opt.MapFrom(o => o.Activo))
            .ForMember(t => t.UsuarioRegistro, opt => opt.MapFrom(o => o.IdUsuarioRegistro))
            .ReverseMap()
            ;

            CreateMap<ProductEntity, ProductDTO>()
            .ForMember(t => t.IdProducto, opt => opt.MapFrom(o => o.IdProducto))
            .ForMember(t => t.Descripcion, opt => opt.MapFrom(o => o.Descripcion))
            .ForMember(t => t.Precio, opt => opt.MapFrom(o => o.Precio))
            .ForMember(t => t.Imagen, opt => opt.MapFrom(o => o.Imagen))
            .ForMember(t => t.NumOrden, opt => opt.MapFrom(o => o.NumOrden))
            .ForMember(t => t.Activo, opt => opt.MapFrom(o => o.IdEstado))
           
            .ReverseMap()
            ;

            CreateMap<ProductDTO, ProductEntity>()
            .ForMember(t => t.IdProducto, opt => opt.MapFrom(o => o.IdProducto))
            .ForMember(t => t.Descripcion, opt => opt.MapFrom(o => o.Descripcion))
            .ForMember(t => t.Precio, opt => opt.MapFrom(o => o.Precio))
            .ForMember(t => t.Imagen, opt => opt.MapFrom(o => o.Imagen))
            .ForMember(t => t.NumOrden, opt => opt.MapFrom(o => o.NumOrden))
            .ForMember(t => t.IdEstado, opt => opt.MapFrom(o => o.Activo))
           
            .ReverseMap()
            ;

            CreateMap<MarcaEntity, MarcaDTO>()
                .ForMember(t => t.IdMarca, opt => opt.MapFrom(o => o.IdMarca))
                .ForMember(t => t.Descripcion, opt => opt.MapFrom(o => o.Descripcion))
                .ForMember(t => t.IdEstado, opt => opt.MapFrom(o => o.IdEstado))
                .ReverseMap();

            CreateMap<MarcaDTO, MarcaEntity>()
                .ForMember(t => t.IdMarca, opt => opt.MapFrom(o => o.IdMarca))
                .ForMember(t => t.Descripcion, opt => opt.MapFrom(o => o.Descripcion))
                .ForMember(t => t.IdEstado, opt => opt.MapFrom(o => o.IdEstado))
                .ReverseMap();

            CreateMap<ProveedorEntity, ProveedorDTO>()
                .ForMember(t => t.IdProveedor, opt => opt.MapFrom(o => o.IdProveedor))
                .ForMember(t => t.RazonSocial, opt => opt.MapFrom(o => o.RazonSocial))
                .ForMember(t => t.IdEstado, opt => opt.MapFrom(o => o.IdEstado))
                .ReverseMap();

            CreateMap<ProveedorDTO, ProveedorEntity>()
                .ForMember(t => t.IdProveedor, opt => opt.MapFrom(o => o.IdProveedor))
                .ForMember(t => t.RazonSocial, opt => opt.MapFrom(o => o.RazonSocial))
                .ForMember(t => t.IdEstado, opt => opt.MapFrom(o => o.IdEstado))
                .ReverseMap();

            CreateMap<ProductTipoEntity,ProductTipoDTO>()
                .ForMember(t => t.IdTipoProducto, opt => opt.MapFrom(o => o.IdTipoProducto))
                .ForMember(t => t.TipoDescripcion, opt => opt.MapFrom(o => o.TipoDescripcion))
                .ForMember(t => t.Activo, opt => opt.MapFrom(o => o.IdEstado))
                .ReverseMap();

            CreateMap<ProductTipoDTO, ProductTipoEntity>()
                .ForMember(t => t.IdTipoProducto, opt => opt.MapFrom(o => o.IdTipoProducto))
                .ForMember(t => t.TipoDescripcion, opt => opt.MapFrom(o => o.TipoDescripcion))
                .ForMember(t => t.IdEstado, opt => opt.MapFrom(o => o.Activo))
                .ReverseMap();

            CreateMap<FinancingRequestTempDTO, RegistroSolicitudFinanciamientoEntity>();

        }
    }
}
